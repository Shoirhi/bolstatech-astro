---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getBlogList, getBlogDetail } from "@/libs/microcms";
import Breadcrumb from "@/components/Breadcrumb.astro";
import { formatDate } from "@/libs/utils";
import { seoConfig } from "@/constants";
import { load } from "cheerio";
import { Image } from "astro:assets";

const { blogId } = Astro.params;

export async function getStaticPaths() {
  const response = await getBlogList({ fields: ["id"] });
  return response.contents.map((content: any) => ({
    params: {
      blogId: content.id,
    },
  }));
}

const blog = await getBlogDetail(blogId as string);

const $ = load(blog.content);

// すべてのimgタグに対して操作を実行
$("img").each((_, img) => {
  // imgタグのsrc属性を更新
  $(img).attr("src", $(img).attr("src") + "?fit=clip&w=560&fm=webp");

  // widthとheightを560に設定
  $(img).attr("width", "560");
  $(img).attr("height", "560");
});

// 更新されたHTMLを取得
blog.content = $.html();
---

<BaseLayout
  title={blog.title}
  description={blog.description}
  imageUrl={blog.thumbnail ? blog.thumbnail.url : undefined}
  type="article"
  structuredData={{
    type: "Article",
    option: {
      datePublished: blog.publishedAt || null,
      dateModified: blog.updatedAt || null,
      author: [
        {
          "@type": "Person",
          name: "Hiroshi Kamikawa",
          url: "https://twitter.com/shoirhi",
        },
      ],
      publisher: {
        name: seoConfig.siteName,
        url: Astro.site,
      },
    },
  }}
>
  <div class="container py-16">
    <Breadcrumb
      lists={[
        {
          name: "ブログ一覧",
          path: "/blog/p/1",
        },
        {
          name: blog.title,
        },
      ]}
    />
    <article class="prose">
      <h1>{blog.title}</h1>
      <p>公開日時：{formatDate(blog.publishedAt || blog.createdAt)}</p>
      {
        blog.thumbnail && (
          <Image src={blog.thumbnail.url} width="560" height="560" loading="eager" alt="" />
        )
      }
      <div set:html={blog.content} />
    </article>
  </div>
</BaseLayout>
