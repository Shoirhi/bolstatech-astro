---
import "@/styles/globals.css";
import { SEO } from "astro-seo";
import { seoConfig } from "@/constants";

export interface Props {
  title?: string;
  description?: string;
  imageUrl?: string;
  disableIndexing?: boolean;
  type?: "website" | "article";
  structuredData?: {
    type: string;
    option?: { [key: string]: any | null } | null;
  };
}

if (Astro.props.title === undefined) {
  Astro.props.title = seoConfig.siteName;
} else if (Astro.props.title) {
  Astro.props.title = `${Astro.props.title} | ${seoConfig.siteName}`;
}

const {
  title,
  description,
  imageUrl,
  disableIndexing = false,
  type,
  structuredData = {
    type: "WebSite",
    option: null,
  },
} = Astro.props;
---

<SEO
  title={title}
  description={description || seoConfig.description}
  noindex={disableIndexing}
  nofollow={disableIndexing}
  charset="utf-8"
  openGraph={{
    basic: {
      title: title,
      type: type || "website",
      image: imageUrl || seoConfig.image.url,
    },
    image: {
      width: 1200,
      height: 630,
    },
    optional: {
      siteName: seoConfig.siteName,
      description: description || seoConfig.description,
    },
  }}
  twitter={{
    card: "summary_large_image",
  }}
  extend={{
    link: [
      {
        rel: "sitemap",
        href: "/sitemap-index.xml",
      },
    ],
    meta: [
      {
        name: "viewport",
        content: "width=device-width, initial-scale=1",
      },
    ],
  }}
/>

<meta name="generator" content={Astro.generator} />
<link
  rel="shortcut icon"
  type="image/svg+xml"
  href={`${Astro.site}favicon.svg`}
/>

<script
  type="application/ld+json"
  set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": structuredData.type,
    name: seoConfig.siteName,
    inLanguage: "jp",
    headline: title,
    description: description,
    image: imageUrl || seoConfig.image.url,
    url: Astro.url,
    ...structuredData.option,
  })}
/>
